from mimiqcircuits import *
from mimiqcircuits.visualization import *
from symengine import *
import networkx as nx
import numpy as np

conn = MimiqConnection(url="https://mimiq.qperfect.io/api")
conn.connect()

def Build_QAOA(B, q, draw=False):
    beta, gamma = symbols('beta gamma')

    n=len(B) #Qubit number

    c=Circuit() #Circuit definition
    c.push(GateH(), range(0, n))
        
    for k in range(0,q):

        #Block here
        for i in range(0,n) :
            for j in range(i+1,n):
                A_ij = B[i,j]
                if A_ij != 0:
                    c.push(GateRZZ(gamma*A_ij), i, j)    #The Upeer one is ALWAYS the control one

        #Block Here
        
        c.push(GateRX(beta), range(0,n))
        
    if draw:
        c.draw()

    return c
    
A=np.random.rand(6,6)

circuit = Build_QAOA(A, 2) 

def Run_QAOA(circuit, beta, gamma, connect):
    ev_circ = circuit.evaluate({'beta':beta, 'gamma': gamma})
    job_id = connect.execute(ev_circ)
    res = connect.get_result(job_id)
    return res

r = Run_QAOA(A, 3, 2, 2, conn)

plothistogram(r)
      
print(r)

